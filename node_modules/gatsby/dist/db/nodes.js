"use strict";

const _ = require(`lodash`);

const {
  store
} = require(`../redux`);

const nodesDb = require(`../redux/nodes`);

const {
  runFastFiltersAndSort
} = require(`../redux/run-fast-filters`);

/**
 * Get content for a node from the plugin that created it.
 *
 * @param {IGatsbyNode} node
 * @returns {Promise<string>}
 */
async function loadNodeContent(node) {
  if (_.isString(node.internal.content)) {
    return node.internal.content;
  } // Load plugin's loader function


  const plugin = store.getState().flattenedPlugins.find(plug => plug.name === node.internal.owner);

  const {
    loadNodeContent
  } = require(plugin.resolve);

  if (!loadNodeContent) {
    throw new Error(`Could not find function loadNodeContent for plugin ${plugin.name}`);
  }

  const content = await loadNodeContent(node);
  node.internal.content = content;
  return content;
}

module.exports = { ...nodesDb,
  runQuery: runFastFiltersAndSort,
  loadNodeContent
};
//# sourceMappingURL=nodes.js.map